name: Build and Push Image

on:
  workflow_dispatch:
  push:
    tags:
      - 'cs-web-server@*'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.parse_tag.outputs.image }}
      version: ${{ steps.parse_tag.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Parse tag to get image and version
        id: parse_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "Full tag: $TAG"
          IMAGE=${TAG%@*}
          VERSION=${TAG#*@}
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload workspace
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: .
          retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Build image
        run: |
          export TAG=${{ needs.setup.outputs.version }}
          cd docker/${{ needs.setup.outputs.image }}
          docker compose build

  push:
    runs-on: ubuntu-latest
    needs: [setup, build]
    steps:
      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image
        run: |
          export TAG=${{ needs.setup.outputs.version }}
          cd docker/${{ needs.setup.outputs.image }}
          docker compose push

  readme:
    runs-on: ubuntu-latest
    needs: [setup, build, push]
    steps:
      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Upload README to Docker Hub
        run: |
          IMAGE_NAME=mrcuya/webxash
          README_PATH=docker/webxash}/README.docker.md
          DESCRIPTION=$(cat $README_PATH | jq -Rs .)

          curl -X PATCH https://hub.docker.com/v2/repositories/$IMAGE_NAME/ \
            -H "Content-Type: application/json" \
            -H "Authorization: JWT $(curl -s -H "Content-Type: application/json" \
              -X POST -d '{"username": "${{ secrets.DOCKER_USERNAME }}", "password": "${{ secrets.DOCKER_PASSWORD }}"}' \
              https://hub.docker.com/v2/users/login/ | jq -r .token)" \
            -d "{\"full_description\": $DESCRIPTION}"
